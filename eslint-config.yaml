extends:
  - "eslint:recommended"
  - "plugin:react/recommended"

plugins:
  - react

env:
  node: true
  mocha: true
  browser: true
  es6: true

ecmaFeatures:
  modules: true
  jsx: true

parserOptions:
  sourceType: module

rules:

  # React/JSX

  jsx-quotes: [error]
  react/jsx-equals-spacing: [warn, never]
  react/jsx-max-props-per-line: [warn, { maximum: 3 }]
  react/jsx-pascal-case: [warn]
  react/jsx-uses-react: [warn]
  react/no-deprecated: [warn]
  react/prop-types: [warn]
  react/react-in-jsx-scope: [warn]
  react/self-closing-comp: [warn]
  react/sort-comp: [warn] # See defaults at blob/master/docs/rules/sort-comp.md
  react/sort-prop-types: [warn, { callbacksLast: true, requiredFirst: true }]
  react/wrap-multilines: [warn]



  # Disagreements with eslint:recommended

  # We may revisit this at a later point but the number of false
  # negatives this creates while developing is too annoying.
  no-console: [0]



  # Consistentcy

  comma-style: [warn, last]
  yoda: [warn, never]
  dot-location: [warn, property]
  no-void: [warn]
  space-before-function-paren: [warn, always]
  one-var:
    - warn
    - uninitialized: always
      initialized: never
  arrow-parens: [warn, always]
  arrow-spacing: [warn, { before: true, after: true }]
  space-before-blocks: [warn, always]
  array-bracket-spacing:
   - warn
   - always
   - singleValue: false
     objectsInArrays: false
     arraysInArrays: false
  object-curly-spacing:
    - warn
    - always
    - objectsInObjects: false
      arraysInObjects: false
  computed-property-spacing: [warn, never]
  camelcase:
    - warn
    - properties: never
  curly: [warn, multi-line]
  no-multi-spaces: [warn]
  space-in-parens: [warn, never]
  generator-star-spacing:
    - warn
    - before: false
      after: true
  eol-last: [warn]
  no-trailing-spaces: [warn]
  indent:
    - warn
    - 2
    - SwitchCase: 1
  no-mixed-spaces-and-tabs: [warn]



  # Minimize Editing Overhead

  # Allow but do not force dangling commas. This equates to the least effort
  # required by the developer.
  comma-dangle: [0]
  object-shorthand: [warn, always]
  prefer-template: [warn]
  quotes: [warn, double]
  semi: [warn, never]



  # Type / Functional Thinking

  no-implicit-coercion: [error]
  no-param-reassign: [error, { props: true }]
  radix: [error]
  eqeqeq: [error]
  no-const-assign: [error]
  prefer-const: [warn]
  prefer-arrow-callback: [warn]
  no-var: [warn]
  default-case: [error]



  # Sanity / Misc

  no-dupe-class-members: [error]
  no-return-assign: [error, always]
  no-undef-init: [warn]
  no-lonely-if: [error]
  no-use-before-define: [error, nofunc]
  strict: [warn, never]
  new-cap: [error, { newIsCap: true, capIsNew: false }]
